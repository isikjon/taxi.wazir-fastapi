#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã orders, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
"""

import sys
import os
sys.path.append('.')

from app.database import SessionLocal, engine
from app import models
from sqlalchemy import text

def clear_orders_table():
    """–û—á–∏—â–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∑–∞–∫–∞–∑–æ–≤"""
    db = SessionLocal()
    
    try:
        print("üóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤...")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
        orders_count = db.query(models.Order).count()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {orders_count}")
        
        if orders_count == 0:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤ —É–∂–µ –ø—É—Å—Ç–∞")
            return
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
        deleted_count = db.query(models.Order).delete()
        db.commit()
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} –∑–∞–∫–∞–∑–æ–≤")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç (–¥–ª—è SQLite)
        try:
            db.execute(text("DELETE FROM sqlite_sequence WHERE name='orders'"))
            db.commit()
            print("üîÑ –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç ID —Å–±—Ä–æ—à–µ–Ω")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
        remaining_count = db.query(models.Order).count()
        print(f"üìä –ó–∞–∫–∞–∑–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {remaining_count}")
        
        if remaining_count == 0:
            print("üéâ –¢–∞–±–ª–∏—Ü–∞ –∑–∞–∫–∞–∑–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!")
        else:
            print(f"‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã: {remaining_count}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç–∞–±–ª–∏—Ü—ã: {e}")
        db.rollback()
        raise
    finally:
        db.close()

def clear_related_tables():
    """–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—á–∏—â–∞–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã"""
    db = SessionLocal()
    
    try:
        print("\nüóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü...")
        
        # –û—á–∏—â–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∞
        balance_count = db.query(models.BalanceTransaction).count()
        if balance_count > 0:
            db.query(models.BalanceTransaction).delete()
            print(f"üí∞ –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –±–∞–ª–∞–Ω—Å–∞: {balance_count}")
        
        # –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        messages_count = db.query(models.Message).count()
        if messages_count > 0:
            db.query(models.Message).delete()
            print(f"üí¨ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_count}")
        
        db.commit()
        print("‚úÖ –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –æ—á–∏—â–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {e}")
        db.rollback()
    finally:
        db.close()

def reset_driver_states():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π (—É–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã)"""
    db = SessionLocal()
    
    try:
        print("\nüë®‚Äçüíº –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π...")
        
        # –°—Ç–∞–≤–∏–º –≤—Å–µ—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π –≤ –æ—Ñ–ª–∞–π–Ω –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        drivers = db.query(models.Driver).all()
        updated_count = 0
        
        for driver in drivers:
            driver.is_online = False
            driver.current_lat = None
            driver.current_lng = None
            driver.last_location_update = None
            updated_count += 1
        
        db.commit()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –≤–æ–¥–∏—Ç–µ–ª–µ–π: {updated_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª–µ–π: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("üö® –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï –∑–∞–∫–∞–∑—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
    print("üìç –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:", engine.url)
    
    response = input("\n‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ").lower().strip()
    
    if response in ['yes', 'y', '–¥–∞', '–¥']:
        try:
            # –û—Å–Ω–æ–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
            clear_orders_table()
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
            response2 = input("\n‚ùì –û—á–∏—Å—Ç–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã (—Å–æ–æ–±—â–µ–Ω–∏—è, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)? (yes/no): ").lower().strip()
            if response2 in ['yes', 'y', '–¥–∞', '–¥']:
                clear_related_tables()
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª–µ–π
            response3 = input("\n‚ùì –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π (–æ—Ñ–ª–∞–π–Ω, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)? (yes/no): ").lower().strip()
            if response3 in ['yes', 'y', '–¥–∞', '–¥']:
                reset_driver_states()
            
            print("\nüéâ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å FastAPI —Å–µ—Ä–≤–µ—Ä")
            
        except Exception as e:
            print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            sys.exit(1)
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
